{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCat","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","props","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAkBvC,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC5BR,GAAO,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SApBoB,SAAEP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUR,GAFvF,wBAGAS,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAEC,GAEzB,OACI,sBAAKC,UAAU,2BAAf,UACI,qBAAKC,IAAKF,EAAMd,IAAKiB,IAAKH,EAAMJ,QAChC,4BAAII,EAAMJ,YCFTQ,EAAU,SAAC,GAAgB,IAAfzB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZR,mBAAS,CAC/BoB,KAAK,GACLc,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAW,WACPxB,EAAQL,GACP8B,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,SAGjB,CAAC1B,IAGG2B,EDdgBK,CAAahC,GAA7BY,EAF4B,EAE5BA,KAAKc,EAFuB,EAEvBA,QAKZ,OACI,qCACC,qBAAIJ,UAAW,uBAAf,cAAwCtB,EAAxC,OAEC0B,GAAW,mBAAGJ,UAAW,iBAAd,qBAET,qBAAKA,UAAY,YAAjB,SAEQV,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEjBpBiB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,WAHhB,mBAGvB0C,EAHuB,KAGXC,EAHW,KAY1B,OACI,qCACA,8CACA,cAAC,EAAD,CAAa5C,OAAU4C,IACvB,uBACA,6BAEQD,EAAWpB,KAAI,SAAAd,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCpB/BoC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ed643645.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ({setCat}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = ( e )=>{\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length >2){\r\n      setCat(category => [inputValue, ...category]);\r\n      setInputValue('');\r\n      // console.log('Submit Done');\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        value={inputValue} \r\n        onChange= {handleInputChange}\r\n      />\r\n    </form>\r\n    \r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCat: PropTypes.func.isRequired\r\n\r\n}","\r\nexport const getGifs = async( category )=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=cmCQEVXrAebTChUbsWXHHWL2snNFy1r3&q=${ encodeURI(category) } Z&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n};","import React from 'react'\r\n\r\nexport const GifGriditem = ( props ) => {\r\n    // console.log(props);\r\n    return (\r\n        <div className=\"card animate__backInDown\">\r\n            <img src={props.url} alt={props.title}/>\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n    // const [images, setImages] = useState([]);\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n         <h3 className =\"animate__fadeInRight\"> {category} </h3>\r\n\r\n         {loading && <p className= \"animate__swing\" >Loading</p>}\r\n\r\n            <div className = \"card-grid\">\r\n                {\r\n                    data.map( img  =>(\r\n                        <GifGriditem\r\n                        key={img.id}\r\n                        {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n     \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n\r\n    return state; //{data:[], loading:true}\r\n};\r\n\r\n // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     .then( setImages );\r\n    // }, [category]);","import React, {useState} from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['Dragon Ball','Bleach', 'Shingeky no kyojin'];\r\n    const [categories, setCategories] = useState(['Bleach']);\r\n\r\n    // const handleAdd = ()=>{\r\n\r\n    //     // setCategories([...categories, 'Naruto']);\r\n    //     setCategories(category => [...category, 'Naruto']);\r\n\r\n\r\n    // }\r\n        return(\r\n            <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCat = {setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key = {category}\r\n                        category = {category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n            </>\r\n        );\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}